// Generated from ./ANTLR/XCalc.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class XCalcLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly MULT = 30;
	public static readonly POWER = 31;
	public static readonly ROOT = 32;
	public static readonly NUMBER = 33;
	public static readonly E = 34;
	public static readonly STRING = 35;
	public static readonly ID = 36;
	public static readonly PI = 37;
	public static readonly WS = 38;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "MULT", "POWER", "ROOT", "NUMBER", 
		"E", "STRING", "ID", "PI", "DIGIT", "Char", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'('", "')'", "'}'", "'['", "']'", "'|'", "'&'", "'-'", "'/'", 
		"'%'", "'+'", "','", "'='", "'cos'", "'sin'", "'tan'", "'acos'", "'asin'", 
		"'atan'", "'abs'", "'ceil'", "'floor'", "'log10'", "'ln'", "'exp'", "'sqrt'", 
		"'atan2'", "'log'", "'pow'", undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, "'\u03C0'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "MULT", "POWER", "ROOT", "NUMBER", "E", "STRING", 
		"ID", "PI", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(XCalcLexer._LITERAL_NAMES, XCalcLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return XCalcLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(XCalcLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "XCalc.g4"; }

	// @Override
	public get ruleNames(): string[] { return XCalcLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return XCalcLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return XCalcLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return XCalcLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02(\u0116\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x03\x02\x03" +
		"\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03" +
		"\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03" +
		"\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10" +
		"\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12" +
		"\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14" +
		"\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16" +
		"\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17" +
		"\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19" +
		"\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B" +
		"\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D" +
		"\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 " +
		"\x03 \x03 \x05 \xBD\n \x03!\x03!\x03!\x03!\x03!\x05!\xC4\n!\x03\"\x05" +
		"\"\xC7\n\"\x03\"\x07\"\xCA\n\"\f\"\x0E\"\xCD\v\"\x03\"\x03\"\x07\"\xD1" +
		"\n\"\f\"\x0E\"\xD4\v\"\x03\"\x05\"\xD7\n\"\x03\"\x05\"\xDA\n\"\x03\"\x06" +
		"\"\xDD\n\"\r\"\x0E\"\xDE\x03\"\x05\"\xE2\n\"\x05\"\xE4\n\"\x03#\x03#\x05" +
		"#\xE8\n#\x03#\x06#\xEB\n#\r#\x0E#\xEC\x03$\x03$\x03$\x03$\x07$\xF3\n$" +
		"\f$\x0E$\xF6\v$\x03$\x03$\x03%\x03%\x05%\xFC\n%\x03%\x03%\x06%\u0100\n" +
		"%\r%\x0E%\u0101\x07%\u0104\n%\f%\x0E%\u0107\v%\x03%\x05%\u010A\n%\x03" +
		"&\x03&\x03\'\x03\'\x03(\x05(\u0111\n(\x03)\x03)\x03)\x03)\x02\x02\x02" +
		"*\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F" +
		"\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F" +
		"\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16" +
		"+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E" +
		";\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02\x02O" +
		"\x02\x02Q\x02(\x03\x02\b\x05\x02,,\xD9\xD9\u221B\u221B\x04\x02GGgg\x04" +
		"\x02--//\x03\x022;\x05\x02C\\c|\u0372\u0401\x05\x02\v\f\x0E\x0F\"\"\x02" +
		"\u0126\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02" +
		"\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02" +
		"\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02" +
		"\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02" +
		"\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02" +
		"\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02" +
		"\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03" +
		"\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02" +
		"\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02" +
		";\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02" +
		"\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02" +
		"\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x03S\x03" +
		"\x02\x02\x02\x05U\x03\x02\x02\x02\x07W\x03\x02\x02\x02\tY\x03\x02\x02" +
		"\x02\v[\x03\x02\x02\x02\r]\x03\x02\x02\x02\x0F_\x03\x02\x02\x02\x11a\x03" +
		"\x02\x02\x02\x13c\x03\x02\x02\x02\x15e\x03\x02\x02\x02\x17g\x03\x02\x02" +
		"\x02\x19i\x03\x02\x02\x02\x1Bk\x03\x02\x02\x02\x1Dm\x03\x02\x02\x02\x1F" +
		"q\x03\x02\x02\x02!u\x03\x02\x02\x02#y\x03\x02\x02\x02%~\x03\x02\x02\x02" +
		"\'\x83\x03\x02\x02\x02)\x88\x03\x02\x02\x02+\x8C\x03\x02\x02\x02-\x91" +
		"\x03\x02\x02\x02/\x97\x03\x02\x02\x021\x9D\x03\x02\x02\x023\xA0\x03\x02" +
		"\x02\x025\xA4\x03\x02\x02\x027\xA9\x03\x02\x02\x029\xAF\x03\x02\x02\x02" +
		";\xB3\x03\x02\x02\x02=\xB7\x03\x02\x02\x02?\xBC\x03\x02\x02\x02A\xC3\x03" +
		"\x02\x02\x02C\xE3\x03\x02\x02\x02E\xE5\x03\x02\x02\x02G\xEE\x03\x02\x02" +
		"\x02I\u0109\x03\x02\x02\x02K\u010B\x03\x02\x02\x02M\u010D\x03\x02\x02" +
		"\x02O\u0110\x03\x02\x02\x02Q\u0112\x03\x02\x02\x02ST\x07*\x02\x02T\x04" +
		"\x03\x02\x02\x02UV\x07+\x02\x02V\x06\x03\x02\x02\x02WX\x07\x7F\x02\x02" +
		"X\b\x03\x02\x02\x02YZ\x07]\x02\x02Z\n\x03\x02\x02\x02[\\\x07_\x02\x02" +
		"\\\f\x03\x02\x02\x02]^\x07~\x02\x02^\x0E\x03\x02\x02\x02_`\x07(\x02\x02" +
		"`\x10\x03\x02\x02\x02ab\x07/\x02\x02b\x12\x03\x02\x02\x02cd\x071\x02\x02" +
		"d\x14\x03\x02\x02\x02ef\x07\'\x02\x02f\x16\x03\x02\x02\x02gh\x07-\x02" +
		"\x02h\x18\x03\x02\x02\x02ij\x07.\x02\x02j\x1A\x03\x02\x02\x02kl\x07?\x02" +
		"\x02l\x1C\x03\x02\x02\x02mn\x07e\x02\x02no\x07q\x02\x02op\x07u\x02\x02" +
		"p\x1E\x03\x02\x02\x02qr\x07u\x02\x02rs\x07k\x02\x02st\x07p\x02\x02t \x03" +
		"\x02\x02\x02uv\x07v\x02\x02vw\x07c\x02\x02wx\x07p\x02\x02x\"\x03\x02\x02" +
		"\x02yz\x07c\x02\x02z{\x07e\x02\x02{|\x07q\x02\x02|}\x07u\x02\x02}$\x03" +
		"\x02\x02\x02~\x7F\x07c\x02\x02\x7F\x80\x07u\x02\x02\x80\x81\x07k\x02\x02" +
		"\x81\x82\x07p\x02\x02\x82&\x03\x02\x02\x02\x83\x84\x07c\x02\x02\x84\x85" +
		"\x07v\x02\x02\x85\x86\x07c\x02\x02\x86\x87\x07p\x02\x02\x87(\x03\x02\x02" +
		"\x02\x88\x89\x07c\x02\x02\x89\x8A\x07d\x02\x02\x8A\x8B\x07u\x02\x02\x8B" +
		"*\x03\x02\x02\x02\x8C\x8D\x07e\x02\x02\x8D\x8E\x07g\x02\x02\x8E\x8F\x07" +
		"k\x02\x02\x8F\x90\x07n\x02\x02\x90,\x03\x02\x02\x02\x91\x92\x07h\x02\x02" +
		"\x92\x93\x07n\x02\x02\x93\x94\x07q\x02\x02\x94\x95\x07q\x02\x02\x95\x96" +
		"\x07t\x02\x02\x96.\x03\x02\x02\x02\x97\x98\x07n\x02\x02\x98\x99\x07q\x02" +
		"\x02\x99\x9A\x07i\x02\x02\x9A\x9B\x073\x02\x02\x9B\x9C\x072\x02\x02\x9C" +
		"0\x03\x02\x02\x02\x9D\x9E\x07n\x02\x02\x9E\x9F\x07p\x02\x02\x9F2\x03\x02" +
		"\x02\x02\xA0\xA1\x07g\x02\x02\xA1\xA2\x07z\x02\x02\xA2\xA3\x07r\x02\x02" +
		"\xA34\x03\x02\x02\x02\xA4\xA5\x07u\x02\x02\xA5\xA6\x07s\x02\x02\xA6\xA7" +
		"\x07t\x02\x02\xA7\xA8\x07v\x02\x02\xA86\x03\x02\x02\x02\xA9\xAA\x07c\x02" +
		"\x02\xAA\xAB\x07v\x02\x02\xAB\xAC\x07c\x02\x02\xAC\xAD\x07p\x02\x02\xAD" +
		"\xAE\x074\x02\x02\xAE8\x03\x02\x02\x02\xAF\xB0\x07n\x02\x02\xB0\xB1\x07" +
		"q\x02\x02\xB1\xB2\x07i\x02\x02\xB2:\x03\x02\x02\x02\xB3\xB4\x07r\x02\x02" +
		"\xB4\xB5\x07q\x02\x02\xB5\xB6\x07y\x02\x02\xB6<\x03\x02\x02\x02\xB7\xB8" +
		"\t\x02\x02\x02\xB8>\x03\x02\x02\x02\xB9\xBD\x07`\x02\x02\xBA\xBB\x07," +
		"\x02\x02\xBB\xBD\x07,\x02\x02\xBC\xB9\x03\x02\x02\x02\xBC\xBA\x03\x02" +
		"\x02\x02\xBD@\x03\x02\x02\x02\xBE\xBF\x07u\x02\x02\xBF\xC0\x07s\x02\x02" +
		"\xC0\xC1\x07t\x02\x02\xC1\xC4\x07v\x02\x02\xC2\xC4\x07\u221C\x02\x02\xC3" +
		"\xBE\x03\x02\x02\x02\xC3\xC2\x03\x02\x02\x02\xC4B\x03\x02\x02\x02\xC5" +
		"\xC7\x07/\x02\x02\xC6\xC5\x03\x02\x02\x02\xC6\xC7\x03\x02\x02\x02\xC7" +
		"\xCB\x03\x02\x02\x02\xC8\xCA\x05M\'\x02\xC9\xC8\x03\x02\x02\x02\xCA\xCD" +
		"\x03\x02\x02\x02\xCB\xC9\x03\x02\x02\x02\xCB\xCC\x03\x02\x02\x02\xCC\xCE" +
		"\x03\x02\x02\x02\xCD\xCB\x03\x02\x02\x02\xCE\xD2\x070\x02\x02\xCF\xD1" +
		"\x05M\'\x02\xD0\xCF\x03\x02\x02\x02\xD1\xD4\x03\x02\x02\x02\xD2\xD0\x03" +
		"\x02\x02\x02\xD2\xD3\x03\x02\x02\x02\xD3\xD6\x03\x02\x02\x02\xD4\xD2\x03" +
		"\x02\x02\x02\xD5\xD7\x05E#\x02\xD6\xD5\x03\x02\x02\x02\xD6\xD7\x03\x02" +
		"\x02\x02\xD7\xE4\x03\x02\x02\x02\xD8\xDA\x07/\x02\x02\xD9\xD8\x03\x02" +
		"\x02\x02\xD9\xDA\x03\x02\x02\x02\xDA\xDC\x03\x02\x02\x02\xDB\xDD\x05M" +
		"\'\x02\xDC\xDB\x03\x02\x02\x02\xDD\xDE\x03\x02\x02\x02\xDE\xDC\x03\x02" +
		"\x02\x02\xDE\xDF\x03\x02\x02\x02\xDF\xE1\x03\x02\x02\x02\xE0\xE2\x05E" +
		"#\x02\xE1\xE0\x03\x02\x02\x02\xE1\xE2\x03\x02\x02\x02\xE2\xE4\x03\x02" +
		"\x02\x02\xE3\xC6\x03\x02\x02\x02\xE3\xD9\x03\x02\x02\x02\xE4D\x03\x02" +
		"\x02\x02\xE5\xE7\t\x03\x02\x02\xE6\xE8\t\x04\x02\x02\xE7\xE6\x03\x02\x02" +
		"\x02\xE7\xE8\x03\x02\x02\x02\xE8\xEA\x03\x02\x02\x02\xE9\xEB\x05M\'\x02" +
		"\xEA\xE9\x03\x02\x02\x02\xEB\xEC\x03\x02\x02\x02\xEC\xEA\x03\x02\x02\x02" +
		"\xEC\xED\x03\x02\x02\x02\xEDF\x03\x02\x02\x02\xEE\xEF\x07$\x02\x02\xEF" +
		"\xF4\x05I%\x02\xF0\xF3\x05I%\x02\xF1\xF3\x05M\'\x02\xF2\xF0\x03\x02\x02" +
		"\x02\xF2\xF1\x03\x02\x02\x02\xF3\xF6\x03\x02\x02\x02\xF4\xF2\x03\x02\x02" +
		"\x02\xF4\xF5\x03\x02\x02\x02\xF5\xF7\x03\x02\x02\x02\xF6\xF4\x03\x02\x02" +
		"\x02\xF7\xF8\x07$\x02\x02\xF8H\x03\x02\x02\x02\xF9\u0105\x05O(\x02\xFA" +
		"\xFC\x07a\x02\x02\xFB\xFA\x03\x02\x02\x02\xFB\xFC\x03\x02\x02\x02\xFC" +
		"\xFF\x03\x02\x02\x02\xFD\u0100\x05O(\x02\xFE\u0100\x05M\'\x02\xFF\xFD" +
		"\x03\x02\x02\x02\xFF\xFE\x03\x02\x02\x02\u0100\u0101\x03\x02\x02\x02\u0101" +
		"\xFF\x03\x02\x02\x02\u0101\u0102\x03\x02\x02\x02\u0102\u0104\x03\x02\x02" +
		"\x02\u0103\xFB\x03\x02\x02\x02\u0104\u0107\x03\x02\x02\x02\u0105\u0103" +
		"\x03\x02\x02\x02\u0105\u0106\x03\x02\x02\x02\u0106\u010A\x03\x02\x02\x02" +
		"\u0107\u0105\x03\x02\x02\x02\u0108\u010A\x05K&\x02\u0109\xF9\x03\x02\x02" +
		"\x02\u0109\u0108\x03\x02\x02\x02\u010AJ\x03\x02\x02\x02\u010B\u010C\x07" +
		"\u03C2\x02\x02\u010CL\x03\x02\x02\x02\u010D\u010E\t\x05\x02\x02\u010E" +
		"N\x03\x02\x02\x02\u010F\u0111\t\x06\x02\x02\u0110\u010F\x03\x02\x02\x02" +
		"\u0111P\x03\x02\x02\x02\u0112\u0113\t\x07\x02\x02\u0113\u0114\x03\x02" +
		"\x02\x02\u0114\u0115\b)\x02\x02\u0115R\x03\x02\x02\x02\x17\x02\xBC\xC3" +
		"\xC6\xCB\xD2\xD6\xD9\xDE\xE1\xE3\xE7\xEC\xF2\xF4\xFB\xFF\u0101\u0105\u0109" +
		"\u0110\x03\x02\x03\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!XCalcLexer.__ATN) {
			XCalcLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(XCalcLexer._serializedATN));
		}

		return XCalcLexer.__ATN;
	}

}

